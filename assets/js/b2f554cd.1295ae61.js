"use strict";(self.webpackChunkpnw_sa=self.webpackChunkpnw_sa||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"welcome","metadata":{"permalink":"/blog/welcome","source":"@site/blog/2022-11-07-welcome.md","title":"Welcome","description":"Starting the Platform","date":"2022-11-07T00:00:00.000Z","formattedDate":"November 7, 2022","tags":[{"label":"hello","permalink":"/blog/tags/hello"}],"readingTime":0.935,"hasTruncateMarker":false,"authors":[{"name":"Jacob Cravinho","title":"Solution Architect @ AWS","url":"https://github.com/jacobcravinho","imageURL":"https://github.com/jacobcravinho.png","key":"cravinho"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["cravinho"],"tags":["hello"]}},"content":"## Starting the Platform ##\\nBuilding a platform for enterprise technical content has been in the works for a couple of years now.  There have always been options such as Wordpress, Medium, etc. but they are either bloated, hosted on someone elses server, or do not allow for fine grained control.  As someone who focuses on serverless technology, nothing felt quite right to dive in and deal with all these nuances.  I really wanted something light, easy to manage, and flexible.  This is when I landed on Docusaurus.\\n\\n## The Tech Stack ##\\nI choose Docusaurus because it focuses on content and less on code.  It is built ontop of React and allows to easily add custom functionality when needed and it can be self hosted or be deployed to Github pages.  I decided to try out Github pages and add management workflows on top.\\n\\n## The Future ##\\nRight now I am just getting started but have a goal to add content at least once a week.  Things to come will be adding getting started code on AWS Steps Functions, Lambda, and other popular AWS services."}]}')}}]);